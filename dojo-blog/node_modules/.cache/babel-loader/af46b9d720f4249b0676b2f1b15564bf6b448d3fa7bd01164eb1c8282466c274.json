{"ast":null,"code":"var _s = $RefreshSig$();\n// this is a costume hook -- \nimport { useEffect, useState } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  //   use effect \n  useEffect(() => {\n    setTimeout(() => {\n      fetch(url)\n      // this is async\n      .then(res => {\n        console.log(res);\n        if (!res.ok) {\n          console.log('cant fetch the resource---');\n        }\n        return res.json(); // this is also async\n      })\n      //no problem if names clash in .then(data and const [data,setData]= useState(null);\n      .then(data => {\n        console.log(data);\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      }).catch(err => {\n        // console.log(err.message);\n        setError(err.message);\n        setIsPending(false);\n      });\n    }, 1000);\n    // remove this 1000 ms, its for devlopment understanding.\n    // []--> this  controls depedency how ,what inffluences the useEffect behaviour. \n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"rcqeyjclAlHyr4P2FqTN2G+WRbU=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","useFetch","url","_s","data","setData","isPending","setIsPending","error","setError","setTimeout","fetch","then","res","console","log","ok","json","catch","err","message"],"sources":["C:/Users/ahad1/OneDrive/Desktop/fresh Git/react/dojo-blog/src/useFetch.js"],"sourcesContent":["// this is a costume hook -- \r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url) =>{\r\n    const [data,setData]= useState(null);\r\n    const [isPending,setIsPending ]= useState(true);\r\n    const [error,setError] = useState(null);\r\n\r\n    //   use effect \r\n    useEffect(()=>{\r\n        setTimeout(() => {\r\n          fetch(url)\r\n          // this is async\r\n            .then(res=>{\r\n              console.log(res);\r\n              if(!res.ok){\r\n                console.log('cant fetch the resource---' );\r\n              }\r\n              return res.json();// this is also async\r\n            })\r\n            //no problem if names clash in .then(data and const [data,setData]= useState(null);\r\n            .then(data=>{\r\n              console.log(data);\r\n              setData(data);\r\n              setIsPending(false);\r\n              setError(null);\r\n            }\r\n            )\r\n            .catch((err)=>{\r\n              // console.log(err.message);\r\n              setError(err.message);\r\n              setIsPending(false);\r\n            })\r\n        }, 1000);\r\n        // remove this 1000 ms, its for devlopment understanding.\r\n          // []--> this  controls depedency how ,what inffluences the useEffect behaviour. \r\n      } , [url]);\r\n      return {data,isPending,error}\r\n}\r\n\r\nexport default useFetch;"],"mappings":";AAAA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAI;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAEL,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACM,SAAS,EAACC,YAAY,CAAE,GAAEP,QAAQ,CAAC,IAAI,CAAC;EAC/C,MAAM,CAACQ,KAAK,EAACC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAEvC;EACAD,SAAS,CAAC,MAAI;IACVW,UAAU,CAAC,MAAM;MACfC,KAAK,CAACT,GAAG;MACT;MAAA,CACGU,IAAI,CAACC,GAAG,IAAE;QACTC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAG,CAACA,GAAG,CAACG,EAAE,EAAC;UACTF,OAAO,CAACC,GAAG,CAAC,4BAA6B,CAAC;QAC5C;QACA,OAAOF,GAAG,CAACI,IAAI,CAAC,CAAC,CAAC;MACpB,CAAC;MACD;MAAA,CACCL,IAAI,CAACR,IAAI,IAAE;QACVU,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;QACjBC,OAAO,CAACD,IAAI,CAAC;QACbG,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAAC,IAAI,CAAC;MAChB,CACA,CAAC,CACAS,KAAK,CAAEC,GAAG,IAAG;QACZ;QACAV,QAAQ,CAACU,GAAG,CAACC,OAAO,CAAC;QACrBb,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC;IACN,CAAC,EAAE,IAAI,CAAC;IACR;IACE;EACJ,CAAC,EAAG,CAACL,GAAG,CAAC,CAAC;EACV,OAAO;IAACE,IAAI;IAACE,SAAS;IAACE;EAAK,CAAC;AACnC,CAAC;AAAAL,EAAA,CAnCKF,QAAQ;AAqCd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}